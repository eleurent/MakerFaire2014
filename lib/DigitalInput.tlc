%% File : DigitalInput.tlc

%implements DigitalInput "C"

%% Function: BlockTypeSetup ===============================================
%%
%function BlockTypeSetup(block, system) void
  %%
  %% The Target Language must be C
  %if ::GenCPP==1
    %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
  %endif

  %assign hdrFile = LibGetModelDotHFile()

  %openfile tmpBuf
  #include <Arduino.h>
  %closefile tmpBuf

  %<LibSetSourceFileSection(hdrFile,"Includes",tmpBuf)>

  %%
%endfunction

%% Function: BlockInstanceSetup ===========================================
%%
%function BlockInstanceSetup(block, system) void
  %%
  %<LibBlockSetIsExpressionCompliant(block)>
  %%
%endfunction

%% Function: Start ========================================================
%%
%function Start(block, system) Output
  %%
  %assign p1_val = LibBlockParameter(p1, "", "", 0)
  %assign p2_val = LibBlockParameter(p2, "", "", 0)
  %%

  if ((uint8_T)%<p2_val> == 1) {
        
        /* Define pin as INPUT_PULLUP */
        pinMode((uint8_T)%<p1_val>, INPUT_PULLUP);
        
    }
    else {
        
        /* Define pin as INPUT */
        pinMode((uint8_T)%<p1_val>, INPUT);
        
    }

  %%
%endfunction

%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
  %%
    %if !LibBlockOutputSignalIsExpr(0)
    %assign p1_val = LibBlockParameter(p1, "", "", 0)
    %assign y1_val = LibBlockOutputSignal(0, "", "", 0)
    %%
    %<y1_val> = digitalRead((uint8_T)%<p1_val>);    
    %endif 
  %%
%endfunction

%% Function: BlockOutputSignal ============================================
%%
%function BlockOutputSignal(block,system,portIdx,ucv,lcv,idx,retType) void
  %%
  %assign p1_val = LibBlockParameter(p1, "", "", 0)
  %assign y1_val = LibBlockOutputSignal(0, "", "", 0)
  %%
  %switch retType
    %case "Signal"
      %if portIdx == 0
        %return "readInput( (uint8_T)%<p1_val>)"
      %else
        %assign errTxt = "Block output port index not supported: %<portIdx>"
        %<LibBlockReportError(block,errTxt)>
      %endif
    %default
      %assign errTxt = "Unsupported return type: %<retType>"
      %<LibBlockReportError(block,errTxt)>
  %endswitch
  %%
%endfunction

%% [EOF]
